{"version":3,"sources":["images/logo.png","components/Header/Header.js","components/Main/ChatRoomList/ChatRoom/ChatRoom.js","components/Main/ChatRoomList/ChatRoomList.js","components/Main/MessageList/Message/Message.js","components/Main/MessageList/MessageList.js","components/Main/Main.js","components/Footer/Footer.js","components/User/Registration/Registration.js","components/User/Splash.js","components/User/Login/Login.js","App.js","index.js"],"names":["Header","props","a","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","console","log","json","remove","changeStatus","html","userStatus","className","onClick","src","logo","ChatRoom","value","id","e","changeChatRoom","target","handleClickChat","name","deleteChatRoom","currentTarget","handleClick","ChatRoomList","useState","addChatFlag","setAddChatFlag","newChatName","setNewChatName","action","onChange","handleChange","type","postChatRoom","chatRooms","map","chatRoom","key","uuidv4","Message","htmlRendered","updatedText","setUpdatedText","editMessageFlag","setEditMessageFlag","updatedObj","updateMessage","handleSubmitEdit","placeholder","username","deleteMessage","handleCloseClick","MessageList","text","setText","messages","message","onSubmit","preventDefault","postMessage","handleSubmit","htmlFor","Main","setChatRooms","setMessages","currentChatRoom","setCurrentChatRoom","firstRender","useRef","grabChatRooms","then","data","grabMessages","room","user","responseData","obj","requestOptions","useEffect","current","Footer","Registration","passwordWarning","email","password1","password2","formData","setFormData","prevState","handleRegistration","Splash","Login","password","handleLogin","App","setUserStatus","isAuth","userData","set","error","ok","statusText","val","checkAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a32ab8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c507efeb.png\";","import \"./Header.css\";\nimport React from 'react';\nimport logo from \"./../../images/logo.png\";\nimport Cookies from 'js-cookie';\nexport default function Header(props) {\n\nfunction handleClick() {\n        if (props.userStatus !== 'approved') {\n            props.changeStatus('splash');\n        } \n    }\n\nasync function handleLogout() {\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify({}),\n    };\n    const response = await fetch('/rest-auth/logout/', options)\n    if(!response){\n        console.log(response);\n    } else {\n        console.log(response)\n        const data = await response.json();\n        Cookies.remove('Authorization');\n       props.changeStatus(\"splash\")\n       \n    }\n}\n\nlet html;\nif (props.userStatus == \"approved\") {\n    html = <button className=\"header-logout-btn\" onClick={handleLogout}>Logout</button>\n}\n\n    return (\n        <div className=\"header-container\">\n            <img className=\"header-img mt-2\" onClick={handleClick} src={logo} />\n            {html}\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./Chatroom.css\"\nimport { AiOutlineClose } from \"react-icons/ai\"\nimport { useState, useEffect } from 'react'\n\nexport default function ChatRoom(props) {\n\n\n\n    function handleClick(e) {\n        props.deleteChatRoom(e.currentTarget.value)\n    }\n\n    function handleClickChat(e) {\n        props.changeChatRoom(e.target.value)\n        // e.target.classList.add(\"chatroom-selected\")\n        console.log(e)\n    }\n\n    return (\n        <div className=\"chatroom-container\">\n            <button className=\"btn btn-outline-success chatroom-btn\" value={props.id} onClick={(e) => handleClickChat(e)}>#{props.name} <button className=\"chatroom-close-btn\" value={props.id} onClick={(e) => handleClick(e)}><AiOutlineClose/></button></button>\n        </div>\n    )\n}\n","import \"./ChatRoomList.css\";\nimport React from \"react\";\nimport ChatRoom from \"./ChatRoom/ChatRoom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\"\n\nexport default function ChatRoomList(props) {\n    const [addChatFlag, setAddChatFlag] = useState(false);\n    const [newChatName, setNewChatName] = useState(\"\");\n\n    function handleAddChat(e) {\n        setAddChatFlag(true);\n    }\n    function handleAddChatName() {\n        props.postChatRoom(newChatName);\n        setNewChatName(\"\");\n        setAddChatFlag(false);\n    }\n\n    function handleChange(e) {\n        setNewChatName(e.target.value);\n    }\n\n    let html;\n\n    if (addChatFlag) {\n        html = (\n            <div className='create-chatroom-container'>\n            <form action=\"\">\n            <input\n                    onChange={(e) => handleChange(e)}\n                    value={newChatName}\n                    type=\"text\"\n                    className='form-control create-chat-input'\n                />\n                <button onClick={(e) => handleAddChatName()} type='submit' className=\"btn btn-success-outline create-chat-btn\">Create</button>\n            </form>\n            </div>\n        );\n    } else {\n        html = (\n            <button onClick={(e) => handleAddChat(e)} className=\"btn btn-success-outline add-chatroom-btn\"> <MdAddCircle/> Add Channel </button>\n        );\n    }\n\n    return (\n        <div className=\"chatroom-list-container\">\n            <div className=\"chatroom-list-header\">\n                <h2>Channels:</h2>\n                {html}\n            </div>\n            <div className=\"chatroom-list\">\n            {props.chatRooms.map((chatRoom) => {\n                return (\n                    <ChatRoom\n                        {...chatRoom}\n                        key={uuidv4()}\n                        changeChatRoom={props.changeChatRoom}\n                        deleteChatRoom={props.deleteChatRoom}\n                    />\n                );\n            })}\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Message.css\";\nimport { FiSend } from \"react-icons/fi\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useState } from \"react\";\nexport default function Message(props) {\n    const [updatedText, setUpdatedText] = useState(\"\");\n    const [editMessageFlag, setEditMessageFlag] = useState(false);\n\n    function handleCloseClick(e) {\n        console.log(e.currentTarget.value);\n        props.deleteMessage(e.currentTarget.value);\n    }\n\n    function handleEditClick(e) {\n        // props.updateMessage(e.currentTarget.value)\n        setEditMessageFlag(true);\n    }\n    function handleSubmitEdit(e) {\n        setEditMessageFlag(false);\n        let updatedObj = { ...props };\n        updatedObj.body = updatedText;\n        console.log(\"AYYY\", updatedObj);\n        props.updateMessage(e.currentTarget.value, updatedObj);\n    }\n\n    function handleChange(e) {\n        setUpdatedText(e.currentTarget.value);\n        console.log(e.currentTarget.value);\n    }\n\n    let htmlRendered;\n\n    if (editMessageFlag) {\n        htmlRendered = (\n            <>\n                <div className=\"message-bubble-editing\">\n                    <div className=\"message-icon-container\">\n                        <button\n                            type=\"submit\"\n                            value={props.id}\n                            onClick={(e) => handleSubmitEdit(e)}\n                            className=\"message-submit-edit-btn\"\n                        >\n                            <FiSend />\n                        </button>\n                    </div>\n\n                    <input\n                        onChange={(e) => handleChange(e)}\n                        value={updatedText}\n                        type=\"textarea\"\n                        placeholder=\"Edit message here...\"\n                        className=\"form-control\"\n                    />\n                    <span className=\"message-content-author\">\n                        {props.username}:\n                    </span>\n                </div>\n            </>\n        );\n    } else {\n        htmlRendered = (\n            <div className=\"message-bubble\">\n                <div className=\"message-icon-container\">\n                    <button\n                        onClick={(e) => handleEditClick(e)}\n                        className=\"message-edit-btn\"\n                    >\n                        <FaRegEdit />\n                    </button>\n                    <button\n                        value={props.id}\n                        onClick={(e) => handleCloseClick(e)}\n                        className=\"message-close-btn\"\n                    >\n                        <AiOutlineClose />\n                    </button>\n                </div>\n\n                <div className=\"message-content-container\">\n                    <span className=\"message-content-author\">\n                        {props.username}:\n                    </span>\n                    <span className=\"message-content-body\">{props.body}</span>\n                </div>\n            </div>\n        );\n    }\n\n    return <>{htmlRendered}</>;\n}\n","import \"./MessageList.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\n\nexport default function MessageList(props) {\n    const [text, setText] = useState(\"\");\n\n    function handleChange(e) {\n        setText(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.postMessage(text);\n        setText(\"\");\n    }\n\n    return (\n        <div className=\"message-list-container\">\n            {props.messages.map((message) => {\n                return (\n                    <Message\n                        key={uuidv4()}\n                        {...message}\n                        deleteMessage={props.deleteMessage}\n                        updateMessage={props.updateMessage}\n                    />\n                );\n            })}\n            <div className=\"new-message-container\">\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label htmlFor=\"chat-message\"></label>\n                    <input\n                        type=\"textarea\"\n                        id=\"chat-message\"\n                        placeholder=\"Enter Message...\"\n                        onChange={(e) => handleChange(e)}\n                        value={text}\n                        className='form-control enter-message-input'\n                    />\n                    <button type=\"submit\" className=\"btn btn-outline-success submit-message-btn\">Send</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n","import \"./Main.css\";\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\nimport ChatRoomList from \"./ChatRoomList/ChatRoomList\";\nimport MessageList from \"./MessageList/MessageList\";\nimport { useState, useEffect, useRef } from \"react\";\n\nexport default function Main() {\n    const [chatRooms, setChatRooms] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [currentChatRoom, setCurrentChatRoom] = useState(0);\n    const firstRender = useRef(true);\n\n    useEffect(() => {\n        grabChatRooms();\n        console.log(messages);\n    }, []);\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false;\n        } else {\n            grabMessages(currentChatRoom);\n        }\n    }, [currentChatRoom]);\n\n    async function grabChatRooms() {\n        await fetch(`/api/chatrooms/`)\n            .then((response) => response.json())\n            .then((data) => setChatRooms(data));\n    }\n\n    async function deleteMessage(id) {\n        await fetch(`/api/chatrooms/${currentChatRoom}/messages/${id}/`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        });\n        grabMessages();\n    }\n\n    async function deleteChatRoom(id) {\n        await fetch(`/api/chatrooms/${id}/`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        });\n        grabChatRooms();\n    }\n\n    async function grabMessages() {\n        await fetch(`/api/chatrooms/${currentChatRoom}/messages/`)\n            .then((response) => response.json())\n            .then((data) => setMessages(data));\n    }\n\n    async function postChatRoom(name) {\n        let data = {\n            name: name,\n        };\n        const response = await fetch(`/api/chatrooms/`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        });\n        grabChatRooms();\n        return response.json();\n    }\n\n    async function postMessage(message) {\n        let data = {\n            room: currentChatRoom,\n            user: \"Username\",\n            body: message,\n        };\n        const response = await fetch(\n            `/api/chatrooms/${currentChatRoom}/messages/`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(data),\n            }\n            \n        );\n        grabMessages();\n        const responseData = await response.json()\n        console.log(responseData.username);\n    }\n\n    async function updateMessage(id, obj) {\n        const requestOptions = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(obj),\n        };\n        const response = await fetch(\n            `/api/chatrooms/${currentChatRoom}/messages/${id}/`,\n            requestOptions\n        );\n        grabMessages();\n        return response.json();\n    }\n\n    function changeChatRoom(id) {\n        setCurrentChatRoom(id);\n    }\n\n    return (\n        <div className=\"main-container\">\n            <ChatRoomList\n                chatRooms={chatRooms}\n                changeChatRoom={changeChatRoom}\n                postChatRoom={postChatRoom}\n                deleteChatRoom={deleteChatRoom}\n            />\n            <MessageList\n                messages={messages}\n                grabMessages={grabMessages}\n                postMessage={postMessage}\n                deleteMessage={deleteMessage}\n                updateMessage={updateMessage}\n            />\n        </div>\n    );\n}\n","import \"./Footer.css\"\nimport React from 'react'\nimport { AiOutlineCopyrightCircle } from 'react-icons/ai'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer-container\">\n            <p className=\"footer-copyright\"> Copyright <AiOutlineCopyrightCircle /> 2021 Diskord. All Rights Reserved</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport './Registration.css'\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport default function Registration(props) {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    });\n\n    function handleChange(e) {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.id]: e.target.value,\n        }));\n        console.log(\"FORMDATA\", formData);\n    }\n    let passwordWarning;\n    if (formData.password1 !== formData.password2) {\n        passwordWarning = <p className=\"text-danger\">Passwords do not match</p>;\n    } else {\n        passwordWarning = \"\";\n    }\n\n    function handleSubmit(e) {\n        console.log(formData);\n        e.preventDefault();\n        if (\n            formData.password1 === formData.password2 &&\n            formData.password1 !== \"\"\n        ) {\n            props.handleRegistration(formData);\n        }\n    }\n\n    function handleBackBtn() {\n        props.changeStatus('splash');\n    }\n\n    return (\n        <div className=\"registration-form-container\">\n            <button className=\"registration-back-btn\" onClick={handleBackBtn}><BiArrowBack/></button>\n            <form className=\"registration-form\" onSubmit={(e) => handleSubmit(e)}>\n                <div className=\"form-group text-left mb-3 mt-1\">\n                    <label className=\"form-label\" htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={formData.username}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Username\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={formData.email}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Email\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"Password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password1\"\n                        value={formData.password1}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"password\">Re-enter Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password2\"\n                        value={formData.password2}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                    {passwordWarning}\n                </div>\n                <button type=\"submit\" className=\"btn btn-success mt-3 registration-submit-btn\">Register</button>\n            </form>\n        </div>\n    );\n}\n","import './Splash.css'\nimport React from \"react\";\n\nexport default function Splash(props) {\n    function handleClick(e) {\n        props.changeStatus(e.target.value);\n    }\n\n    return (\n        <div className='splash-container'>\n            <h1>Welcome to <span className=\"diskord-green\">Diskord</span> Chat Client</h1>\n            <p>Diskord is a place where you can belong to a programming cohort, a school club, a gaming group, or a worldwide art community. Where just you and a handful of friends can spend time together. A place that makes it easy to talk every day and hang out more often.</p>\n            <div className='splash-btn-group'>\n            <button className=\"btn btn-success\" value=\"register\" onClick={handleClick}>\n                Register\n            </button>\n            <button className=\"btn btn-success mt-2\" value=\"login\" onClick={handleClick}>\n                Login\n            </button>\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Login.css\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { useState } from \"react\";\n\nexport default function Login(props) {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    function handleChange(e) {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.id]: e.target.value,\n        }));\n        console.log(\"FORMDATA\", formData);\n    }\n\n    function handleSubmit(e) {\n        console.log(formData);\n        e.preventDefault();\n        props.handleLogin(formData);\n    }\n\n    function handleBackBtn() {\n        props.changeStatus('splash')\n    }\n\n    return (\n        <div className=\"login-container\">\n            <button className=\"login-back-btn\" onClick={handleBackBtn}>\n                <BiArrowBack />\n            </button>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group text-left mb-3\">\n                    <label className=\"form-label\" htmlFor=\"username\">\n                        Username:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={formData.username}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Username\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3 mt-2\">\n                    <label className=\"form-label\" htmlFor=\"Password\">\n                        Password:\n                    </label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-success submit-login-btn\"\n                >\n                    Login\n                </button>\n            </form>\n        </div>\n    );\n}\n","import Cookies, { set } from \"js-cookie\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Footer from \"./components/Footer/Footer\";\nimport Registration from \"./components/User/Registration/Registration\";\nimport Splash from \"./components/User/Splash\";\nimport Login from \"./components/User/Login/Login\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n    const [userStatus, setUserStatus] = useState(\"splash\");\n    const [isAuth, setIsAuth] = useState(false);\n\n    useEffect( ()=> {\n        const checkAuth = async () => {\n            const response = fetch('/rest-auth/user/');\n            if (response.ok === false) {\n                setUserStatus(\"splash\")\n            }\n            else {\n                setUserStatus(\"approved\")\n            }\n        }\n        checkAuth();\n    }, [])\n\n    async function handleRegistration(userData) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(userData),\n        };\n        const response = await fetch(\"/rest-auth/registration/\", options);\n        try {\n            const data = await response.json();\n            console.log(data);\n            Cookies.set(`Authorization`, `Token ${data.key}`);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async function handleLogin(userData) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(userData),\n        };\n        const response = await fetch(\"/rest-auth/login/\", options);\n        if (response.ok === true) {\n            const data = await response.json();\n            Cookies.set(`Authorization`, `Token ${data.key}`);\n            setUserStatus(\"approved\");\n            \n        } else {\n            console.error(response.statusText);\n        }\n    }\n\n    function changeStatus(val) {\n        setUserStatus(val);\n    }\n\n    let body;\n    switch (userStatus) {\n        case \"splash\":\n            body = <Splash changeStatus={changeStatus} />;\n            break;\n        case \"register\":\n            body = <Registration handleRegistration={handleRegistration} changeStatus={changeStatus}/>;\n            break;\n        case \"login\":\n            body = <Login handleLogin={handleLogin} changeStatus={changeStatus} isAuth={isAuth}/>;\n            break;\n        case \"approved\":\n            body = <Main />;\n            break;\n    }\n\n    \n\n    return (\n        <div className=\"App\">\n            <Header changeStatus={changeStatus} userStatus={userStatus}/>\n            {body}\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}