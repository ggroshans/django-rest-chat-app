{"version":3,"sources":["images/logo.png","components/Header/Header.js","components/Main/ChatroomList/Chatroom/Chatroom.js","components/Main/ChatroomList/ChatroomList.js","components/Main/MessageList/Message/Message.js","components/Main/MessageList/MessageList.js","components/Main/Main.js","components/Footer/Footer.js","components/User/Registration/Registration.js","components/User/Splash.js","components/User/Login/Login.js","App.js","index.js"],"names":["Header","props","a","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","console","log","json","remove","changeStatus","html","userStatus","className","onClick","src","logo","ChatRoom","value","id","e","changeChatRoom","target","handleClickChat","name","deleteChatRoom","currentTarget","handleClick","ChatRoomList","useState","addChatFlag","setAddChatFlag","newChatName","setNewChatName","action","onChange","handleChange","type","postChatRoom","chatRooms","map","chatRoom","key","uuidv4","Message","htmlRendered","updatedText","setUpdatedText","editMessageFlag","setEditMessageFlag","updatedObj","updateMessage","handleSubmitEdit","placeholder","username","currentUser","deleteMessage","handleCloseClick","MessageList","text","setText","currentChatRoom","useEffect","messages","message","onSubmit","preventDefault","postMessage","handleSubmit","htmlFor","Main","setChatRooms","setMessages","setCurrentChatRoom","firstRender","useRef","then","data","updatedMessages","index","findIndex","splice","updatedChatRooms","chatroom","grabMessages","undefined","POSTdata","updatedChatrooms","push","room","user","obj","requestOptions","messagesCopy","grabChatRooms","current","Footer","Registration","passwordWarning","email","password1","password2","formData","setFormData","prevState","handleRegistration","Splash","Login","password","handleLogin","App","setUserStatus","isAuth","setCurrentUser","userData","set","error","ok","statusText","val","checkAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b75bd17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c507efeb.png\";","import \"./Header.css\";\nimport React from 'react';\nimport logo from \"./../../images/logo.png\";\nimport Cookies from 'js-cookie';\nexport default function Header(props) {\n\nfunction handleClick() {\n        if (props.userStatus !== 'approved') {\n            props.changeStatus('splash');\n        } \n    }\n\nasync function handleLogout() {\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify({}),\n    };\n    const response = await fetch('/rest-auth/logout/', options)\n    if(!response){\n        console.log(response);\n    } else {\n        console.log(response)\n        const data = await response.json();\n        Cookies.remove('Authorization');\n        props.changeStatus(\"splash\")\n       \n    }\n}\n\nlet html;\nif (props.userStatus == \"approved\") {\n    html = <button className=\"header-logout-btn\" onClick={handleLogout}>Logout</button>\n}\n\n    return (\n        <div className=\"header-container\">\n            <img className=\"header-img mt-2\" onClick={handleClick} src={logo} />\n            {html}\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./Chatroom.css\"\nimport { AiOutlineClose } from \"react-icons/ai\"\nimport { useState, useEffect } from 'react'\n\nexport default function ChatRoom(props) {\n\n\n\n    function handleClick(e) {\n        props.deleteChatRoom(e.currentTarget.value)\n    }\n\n    function handleClickChat(e) {\n        props.changeChatRoom(e.target.value)\n        // e.target.classList.add(\"chatroom-selected\")\n        console.log(e)\n    }\n\n    return (\n        <div className=\"chatroom-container\">\n            <button className=\"btn btn-outline-success chatroom-btn\" value={props.id} onClick={(e) => handleClickChat(e)}>#{props.name} <button className=\"chatroom-close-btn\" value={props.id} onClick={(e) => handleClick(e)}><AiOutlineClose/></button></button>\n        </div>\n    )\n}\n","import \"./ChatRoomList.css\";\nimport React from \"react\";\nimport ChatRoom from \"./Chatroom/Chatroom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\"\n\nexport default function ChatRoomList(props) {\n    const [addChatFlag, setAddChatFlag] = useState(false);\n    const [newChatName, setNewChatName] = useState(\"\");\n\n    function handleAddChat(e) {\n        setAddChatFlag(true);\n    }\n    function handleAddChatName() {\n        props.postChatRoom(newChatName);\n        setNewChatName(\"\");\n        setAddChatFlag(false);\n    }\n\n    function handleChange(e) {\n        setNewChatName(e.target.value);\n    }\n\n    let html;\n\n    if (addChatFlag) {\n        html = (\n            <div className='create-chatroom-container'>\n            <form action=\"\">\n            <input\n                    onChange={(e) => handleChange(e)}\n                    value={newChatName}\n                    type=\"text\"\n                    className='form-control create-chat-input'\n                />\n                <button onClick={(e) => handleAddChatName()} type='submit' className=\"btn btn-success-outline create-chat-btn\">Create</button>\n            </form>\n            </div>\n        );\n    } else {\n        html = (\n            <button onClick={(e) => handleAddChat(e)} className=\"btn btn-success-outline add-chatroom-btn\"> <MdAddCircle/> Add Channel </button>\n        );\n    }\n\n    return (\n        <div className=\"chatroom-list-container\">\n            <div className=\"chatroom-list-header\">\n                <h2>Channels:</h2>\n                {html}\n            </div>\n            <div className=\"chatroom-list\">\n            {props.chatRooms.map((chatRoom) => {\n                return (\n                    <ChatRoom\n                        {...chatRoom}\n                        key={uuidv4()}\n                        changeChatRoom={props.changeChatRoom}\n                        deleteChatRoom={props.deleteChatRoom}\n                    />\n                );\n            })}\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Message.css\";\nimport { FiSend } from \"react-icons/fi\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useState } from \"react\";\n\nexport default function Message(props) {\n    const [updatedText, setUpdatedText] = useState(\"\");\n    const [editMessageFlag, setEditMessageFlag] = useState(false);\n\n    function handleCloseClick(e) {\n        props.deleteMessage(e.currentTarget.value);\n    }\n\n    function handleEditClick(e) {\n        // props.updateMessage(e.currentTarget.value)\n        setEditMessageFlag(true);\n    }\n    function handleSubmitEdit(e) {\n        setEditMessageFlag(false);\n        let updatedObj = { ...props };\n        updatedObj.body = updatedText;\n        props.updateMessage(e.currentTarget.value, updatedObj);\n    }\n\n    function handleChange(e) {\n        setUpdatedText(e.currentTarget.value);\n    }\n\n    console.log(\"PROPSSSSSSS\", props);\n\n    let htmlRendered;\n\n    if (editMessageFlag) {\n        htmlRendered = (\n            <>\n                <div className=\"message-bubble-editing\">\n                    <div className=\"message-icon-container\">\n                        <button\n                            type=\"submit\"\n                            value={props.id}\n                            onClick={(e) => handleSubmitEdit(e)}\n                            className=\"message-submit-edit-btn\"\n                        >\n                            <FiSend />\n                        </button>\n                    </div>\n\n                    <input\n                        onChange={(e) => handleChange(e)}\n                        value={updatedText}\n                        type=\"textarea\"\n                        placeholder=\"Edit message here...\"\n                        className=\"form-control\"\n                    />\n                    <span className=\"message-content-author\">\n                        {props.username}:\n                    </span>\n                </div>\n            </>\n        );\n    } else {\n        htmlRendered = (\n            <div className={props.currentUser.username === props.username ? \"message-bubble-user\" : \"message-bubble\"}>\n                {props.currentUser.username === props.username ? (\n                    <div className=\"message-icon-container\">\n                        <button\n                            onClick={(e) => handleEditClick(e)}\n                            className=\"message-edit-btn\"\n                        >\n                            <FaRegEdit />\n                        </button>\n                        <button\n                            value={props.id}\n                            onClick={(e) => handleCloseClick(e)}\n                            className=\"message-close-btn\"\n                        >\n                            <AiOutlineClose />\n                        </button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n\n                <div className=\"message-content-container\">\n                    <span className=\"message-content-author\">\n                        {props.username}:\n                    </span>\n                    <span className=\"message-content-body\">{props.body}</span>\n                </div>\n            </div>\n        );\n    }\n\n    return <>{htmlRendered}</>;\n}\n","import \"./MessageList.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState, useEffect } from \"react\";\n\nexport default function MessageList(props) {\n    const [text, setText] = useState(\"\");\n\n\n    function handleChange(e) {\n        setText(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.postMessage(text);\n        setText(\"\");\n    }\n\n    let html\n\n    console.log(\"CURR CR\", props.currentChatRoom)\n\n    useEffect( () => {\n        if (props.currentChatRoom === null) {\n            console.log(\"Fired\")\n            html = <h2 className=\"not-in-chatroom-heading\">You are currently not in a chatroom</h2>\n        } \n    }, [props.currentChatRoom])\n\n\n    return (\n        <div className=\"message-list-container\">\n            {html}\n            {props.messages.map((message) => {\n                return (\n                    <Message\n                        key={uuidv4()}\n                        {...message}\n                        deleteMessage={props.deleteMessage}\n                        updateMessage={props.updateMessage}\n                        currentUser={props.currentUser}\n                    />\n                );\n            })}\n            <div className=\"new-message-container\">\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label htmlFor=\"chat-message\"></label>\n                    <input\n                        type=\"textarea\"\n                        id=\"chat-message\"\n                        placeholder=\"Enter Message...\"\n                        onChange={(e) => handleChange(e)}\n                        value={text}\n                        className='form-control enter-message-input'\n                    />\n                    <button type=\"submit\" className=\"btn btn-outline-success submit-message-btn\">Send</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n","import \"./Main.css\";\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\nimport ChatRoomList from \"./ChatroomList/ChatroomList\";\nimport MessageList from \"./MessageList/MessageList\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { MdSettingsInputAntenna } from \"react-icons/md\";\n\nexport default function Main(props) {\n    const [chatRooms, setChatRooms] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [currentChatRoom, setCurrentChatRoom] = useState(null);\n    const firstRender = useRef(true);\n\n    useEffect(() => {\n        grabChatRooms();\n    }, []);\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false;\n        } else {\n            grabMessages(currentChatRoom);\n        }\n    }, [currentChatRoom]);\n\n\n    async function grabChatRooms() {\n            await fetch(`/api/chatrooms/`)\n            .then((response) => response.json())\n            .then((data) => setChatRooms(data));\n    }\n\n    async function deleteMessage(id) {\n        await fetch(`/api/chatrooms/${currentChatRoom}/messages/${id}/`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        });\n        \n        let updatedMessages = [...messages];\n        let index = updatedMessages.findIndex(message => message.id === id);\n        updatedMessages.splice(index, 1);\n        setMessages(updatedMessages)\n        setCurrentChatRoom(null)\n    }\n\n    async function deleteChatRoom(id) {\n        await fetch(`/api/chatrooms/${id}/`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        });\n        let updatedChatRooms = [...chatRooms];\n        let index = updatedChatRooms.findIndex(chatroom => chatroom.id === id);\n        updatedChatRooms.splice(index, 1);\n        setChatRooms(updatedChatRooms)\n        setCurrentChatRoom(null)\n    }\n\n    async function grabMessages() {\n        if (currentChatRoom === undefined) {\n            setCurrentChatRoom(null)\n        } else {\n        await fetch(`/api/chatrooms/${currentChatRoom}/messages/`)\n            .then((response) => response.json())\n            .then((data) => setMessages([...data]));\n    }\n}\n    async function postChatRoom(name) {\n        let POSTdata = {\n            name: name,\n        };\n        const response = await fetch(`/api/chatrooms/`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(POSTdata),\n        });\n        const data = await response.json();\n        let updatedChatrooms = [...chatRooms]\n        updatedChatrooms.push(data)\n        setChatRooms(updatedChatrooms);\n    }\n\n    async function postMessage(message) {\n        let POSTdata = {\n            room: currentChatRoom,\n            user: \"Username\",\n            body: message,\n        };\n        const response = await fetch(\n            `/api/chatrooms/${currentChatRoom}/messages/`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(POSTdata),\n            }\n            \n        );\n        const data = await response.json()\n        let updatedMessages = [...messages]\n        updatedMessages.push(data)\n        setMessages(updatedMessages)\n    }\n\n    async function updateMessage(id, obj) {\n        const requestOptions = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(obj),\n        };\n        const response = await fetch(\n            `/api/chatrooms/${currentChatRoom}/messages/${id}/`,\n            requestOptions\n        );\n        const data = await response.json();\n\n        const messagesCopy = [...messages];\n        const index = messagesCopy.findIndex(message => message.id === data.id);\n        messagesCopy[index] = data;\n        setMessages(messagesCopy);\n    }\n\n    function changeChatRoom(id) {\n        setCurrentChatRoom(id);\n    }\n\n    return (\n        <div className=\"main-container\">\n            <ChatRoomList\n                chatRooms={chatRooms}\n                changeChatRoom={changeChatRoom}\n                postChatRoom={postChatRoom}\n                deleteChatRoom={deleteChatRoom}\n            />\n            <MessageList\n                messages={messages}\n                grabMessages={grabMessages}\n                postMessage={postMessage}\n                deleteMessage={deleteMessage}\n                updateMessage={updateMessage}\n                currentChatRoom = {currentChatRoom}\n                currentUser={props.currentUser}\n            />\n        </div>\n    );\n}\n","import \"./Footer.css\"\nimport React from 'react'\nimport { AiOutlineCopyrightCircle } from 'react-icons/ai'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer-container\">\n            <p className=\"footer-copyright\"> Copyright <AiOutlineCopyrightCircle /> 2021 Diskord. All Rights Reserved</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport './Registration.css'\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport default function Registration(props) {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    });\n\n    function handleChange(e) {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.id]: e.target.value,\n        }));\n        console.log(\"FORMDATA\", formData);\n    }\n    let passwordWarning;\n    if (formData.password1 !== formData.password2) {\n        passwordWarning = <p className=\"text-danger\">Passwords do not match</p>;\n    } else {\n        passwordWarning = \"\";\n    }\n\n    function handleSubmit(e) {\n        console.log(formData);\n        e.preventDefault();\n        if (\n            formData.password1 === formData.password2 &&\n            formData.password1 !== \"\"\n        ) {\n            props.handleRegistration(formData);\n        }\n    }\n\n    function handleBackBtn() {\n        props.changeStatus('splash');\n    }\n\n    return (\n        <div className=\"registration-form-container\">\n            <button className=\"registration-back-btn\" onClick={handleBackBtn}><BiArrowBack/></button>\n            <form className=\"registration-form\" onSubmit={(e) => handleSubmit(e)}>\n                <div className=\"form-group text-left mb-3 mt-1\">\n                    <label className=\"form-label\" htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={formData.username}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Username\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={formData.email}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Email\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"Password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password1\"\n                        value={formData.password1}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"password\">Re-enter Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password2\"\n                        value={formData.password2}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                    {passwordWarning}\n                </div>\n                <button type=\"submit\" className=\"btn btn-success mt-3 registration-submit-btn\">Register</button>\n            </form>\n        </div>\n    );\n}\n","import './Splash.css'\nimport React from \"react\";\n\nexport default function Splash(props) {\n    function handleClick(e) {\n        props.changeStatus(e.target.value);\n    }\n\n    return (\n        <div className='splash-container'>\n            <h1>Welcome to <span className=\"diskord-green\">Diskord</span> Chat Client</h1>\n            <p>Diskord is a place where you can belong to a programming cohort, a school club, a gaming group, or a worldwide art community. Where just you and a handful of friends can spend time together. A place that makes it easy to talk every day and hang out more often.</p>\n            <div className='splash-btn-group'>\n            <button className=\"btn btn-success\" value=\"register\" onClick={handleClick}>\n                Register\n            </button>\n            <button className=\"btn btn-success mt-2\" value=\"login\" onClick={handleClick}>\n                Login\n            </button>\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Login.css\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { useState } from \"react\";\n\nexport default function Login(props) {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    function handleChange(e) {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.id]: e.target.value,\n        }));\n        console.log(\"FORMDATA\", formData);\n    }\n\n    function handleSubmit(e) {\n        console.log(formData);\n        e.preventDefault();\n        props.handleLogin(formData);\n    }\n\n    function handleBackBtn() {\n        props.changeStatus('splash')\n    }\n\n    return (\n        <div className=\"login-container\">\n            <button className=\"login-back-btn\" onClick={handleBackBtn}>\n                <BiArrowBack />\n            </button>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group text-left mb-3\">\n                    <label className=\"form-label\" htmlFor=\"username\">\n                        Username:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={formData.username}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Username\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3 mt-2\">\n                    <label className=\"form-label\" htmlFor=\"Password\">\n                        Password:\n                    </label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-success submit-login-btn\"\n                >\n                    Login\n                </button>\n            </form>\n        </div>\n    );\n}\n","import Cookies, { set } from \"js-cookie\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Footer from \"./components/Footer/Footer\";\nimport Registration from \"./components/User/Registration/Registration\";\nimport Splash from \"./components/User/Splash\";\nimport Login from \"./components/User/Login/Login\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n    const [userStatus, setUserStatus] = useState(\"splash\");\n    const [isAuth, setIsAuth] = useState(false);\n    const [currentUser, setCurrentUser] = useState()\n\n    useEffect( ()=> {\n        const checkAuth = async () => {\n            const response = await fetch('/rest-auth/user/');\n            const data = await response.json()\n            setCurrentUser(data);\n            if (response.ok === false) {\n                setUserStatus(\"splash\")\n            }\n            else {\n                setUserStatus(\"approved\")\n            }\n        }\n        checkAuth();\n    }, [ ,isAuth])\n\n    async function handleRegistration(userData) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(userData),\n        };\n        const response = await fetch(\"/rest-auth/registration/\", options);\n        try {\n            const data = await response.json();\n            console.log(data);\n            Cookies.set(`Authorization`, `Token ${data.key}`);\n            setUserStatus(\"approved\");\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async function handleLogin(userData) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(userData),\n        };\n        const response = await fetch(\"/rest-auth/login/\", options);\n        if (response.ok === true) {\n            const data = await response.json();\n            Cookies.set(`Authorization`, `Token ${data.key}`);\n            setUserStatus(\"approved\");\n            \n        } else {\n            console.error(response.statusText);\n        }\n    }\n\n    function changeStatus(val) {\n        setUserStatus(val);\n    }\n\n    console.log(\"user status\", userStatus)\n\n    let body;\n    switch (userStatus) {\n        case \"splash\":\n            body = <Splash changeStatus={changeStatus} />;\n            break;\n        case \"register\":\n            body = <Registration handleRegistration={handleRegistration} changeStatus={changeStatus}/>;\n            break;\n        case \"login\":\n            body = <Login handleLogin={handleLogin} changeStatus={changeStatus} isAuth={isAuth}/>;\n            break;\n        case \"approved\":\n            body = <Main currentUser={currentUser}/>;\n            break;\n    }\n\n    \n\n    return (\n        <div className=\"App\">\n            <Header changeStatus={changeStatus} userStatus={userStatus}/>\n            {body}\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}