{"version":3,"sources":["images/logo.png","components/Header/Header.js","components/Main/ChatRoomList/ChatRoom/ChatRoom.js","components/Main/ChatRoomList/ChatRoomList.js","components/Main/MessageList/Message/Message.js","components/Main/MessageList/MessageList.js","components/Main/Main.js","components/Footer/Footer.js","components/User/Registration/Registration.js","components/User/Splash.js","components/User/Login/Login.js","App.js","index.js"],"names":["Header","props","className","onClick","changeStatus","src","logo","ChatRoom","value","id","e","changeChatRoom","target","classList","add","console","log","handleClickChat","name","deleteChatRoom","currentTarget","handleClick","ChatRoomList","html","useState","addChatFlag","setAddChatFlag","newChatName","setNewChatName","action","onChange","handleChange","type","postChatRoom","chatRooms","map","chatRoom","key","uuidv4","Message","htmlRendered","updatedText","setUpdatedText","editMessageFlag","setEditMessageFlag","updatedObj","body","updateMessage","handleSubmitEdit","placeholder","username","deleteMessage","handleCloseClick","MessageList","text","setText","messages","message","onSubmit","preventDefault","postMessage","handleSubmit","htmlFor","Main","setChatRooms","setMessages","currentChatRoom","setCurrentChatRoom","firstRender","useRef","grabChatRooms","a","fetch","then","response","json","data","method","headers","Cookies","get","grabMessages","JSON","stringify","room","user","responseData","obj","requestOptions","useEffect","current","Footer","Registration","passwordWarning","email","password1","password2","formData","setFormData","prevState","handleRegistration","Splash","Login","password","handleLogin","App","userStatus","setUserStatus","userData","options","set","error","ok","statusText","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c58e8ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c507efeb.png\";","import \"./Header.css\"\nimport React from 'react'\nimport logo from \"./../../images/logo.png\"\nexport default function Header(props) {\n\nfunction handleClick() {\n        props.changeStatus('splash');\n    }\n\n    return (\n        <div className=\"header\">\n            <img className=\"header-img mt-4\" onClick={handleClick} src={logo} />\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./Chatroom.css\"\nimport { AiOutlineClose } from \"react-icons/ai\"\nimport { useState, useEffect } from 'react'\n\nexport default function ChatRoom(props) {\n\n\n\n    function handleClick(e) {\n        props.deleteChatRoom(e.currentTarget.value)\n    }\n\n    function handleClickChat(e) {\n        props.changeChatRoom(e.target.value)\n        e.target.classList.add(\"chatroom-selected\")\n        console.log(e)\n    }\n\n    return (\n        <div className=\"chatroom-container\">\n            <button className=\"btn btn-outline-success chatroom-btn\" value={props.id} onClick={(e) => handleClickChat(e)}>#{props.name} <button className=\"chatroom-close-btn\" value={props.id} onClick={(e) => handleClick(e)}><AiOutlineClose/></button></button>\n        </div>\n    )\n}\n","import \"./ChatRoomList.css\";\nimport React from \"react\";\nimport ChatRoom from \"./ChatRoom/ChatRoom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\"\n\nexport default function ChatRoomList(props) {\n    const [addChatFlag, setAddChatFlag] = useState(false);\n    const [newChatName, setNewChatName] = useState(\"\");\n\n    function handleAddChat(e) {\n        setAddChatFlag(true);\n    }\n    function handleAddChatName() {\n        props.postChatRoom(newChatName);\n        setNewChatName(\"\");\n        setAddChatFlag(false);\n    }\n\n    function handleChange(e) {\n        setNewChatName(e.target.value);\n    }\n\n    let html;\n\n    if (addChatFlag) {\n        html = (\n            <div className='create-chatroom-container'>\n            <form action=\"\">\n            <input\n                    onChange={(e) => handleChange(e)}\n                    value={newChatName}\n                    type=\"text\"\n                    className='form-control create-chat-input'\n                />\n                <button onClick={(e) => handleAddChatName()} type='submit' className=\"btn btn-success-outline create-chat-btn\">Create</button>\n            </form>\n            </div>\n        );\n    } else {\n        html = (\n            <button onClick={(e) => handleAddChat(e)} className=\"btn btn-success-outline add-chatroom-btn\"> <MdAddCircle/> Add Channel </button>\n        );\n    }\n\n    return (\n        <div className=\"chatroom-list-container\">\n            <div className=\"chatroom-list-header\">\n                <h2>Channels:</h2>\n                {html}\n            </div>\n            <div className=\"chatroom-list\">\n            {props.chatRooms.map((chatRoom) => {\n                return (\n                    <ChatRoom\n                        {...chatRoom}\n                        key={uuidv4()}\n                        changeChatRoom={props.changeChatRoom}\n                        deleteChatRoom={props.deleteChatRoom}\n                    />\n                );\n            })}\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Message.css\";\nimport { FiSend } from \"react-icons/fi\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useState } from \"react\";\nexport default function Message(props) {\n    const [updatedText, setUpdatedText] = useState(\"\");\n    const [editMessageFlag, setEditMessageFlag] = useState(false);\n\n    function handleCloseClick(e) {\n        console.log(e.currentTarget.value);\n        props.deleteMessage(e.currentTarget.value);\n    }\n\n    function handleEditClick(e) {\n        // props.updateMessage(e.currentTarget.value)\n        setEditMessageFlag(true);\n    }\n    function handleSubmitEdit(e) {\n        setEditMessageFlag(false);\n        let updatedObj = { ...props };\n        updatedObj.body = updatedText;\n        console.log(\"AYYY\", updatedObj);\n        props.updateMessage(e.currentTarget.value, updatedObj);\n    }\n\n    function handleChange(e) {\n        setUpdatedText(e.currentTarget.value);\n        console.log(e.currentTarget.value);\n    }\n\n    let htmlRendered;\n\n    if (editMessageFlag) {\n        htmlRendered = (\n            <>\n                <div className=\"message-bubble-editing\">\n                    <div className=\"message-icon-container\">\n                        <button\n                            type=\"submit\"\n                            value={props.id}\n                            onClick={(e) => handleSubmitEdit(e)}\n                            className=\"message-submit-edit-btn\"\n                        >\n                            <FiSend />\n                        </button>\n                    </div>\n\n                    <input\n                        onChange={(e) => handleChange(e)}\n                        value={updatedText}\n                        type=\"textarea\"\n                        placeholder=\"Edit message here...\"\n                        className=\"form-control\"\n                    />\n                    <span className=\"message-content-author\">\n                        {props.username}:\n                    </span>\n                </div>\n            </>\n        );\n    } else {\n        htmlRendered = (\n            <div className=\"message-bubble\">\n                <div className=\"message-icon-container\">\n                    <button\n                        onClick={(e) => handleEditClick(e)}\n                        className=\"message-edit-btn\"\n                    >\n                        <FaRegEdit />\n                    </button>\n                    <button\n                        value={props.id}\n                        onClick={(e) => handleCloseClick(e)}\n                        className=\"message-close-btn\"\n                    >\n                        <AiOutlineClose />\n                    </button>\n                </div>\n\n                <div className=\"message-content-container\">\n                    <span className=\"message-content-author\">\n                        {props.username}:\n                    </span>\n                    <span className=\"message-content-body\">{props.body}</span>\n                </div>\n            </div>\n        );\n    }\n\n    return <>{htmlRendered}</>;\n}\n","import \"./MessageList.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\n\nexport default function MessageList(props) {\n    const [text, setText] = useState(\"\");\n\n    function handleChange(e) {\n        setText(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.postMessage(text);\n        setText(\"\");\n    }\n\n    return (\n        <div className=\"message-list-container\">\n            {props.messages.map((message) => {\n                return (\n                    <Message\n                        key={uuidv4()}\n                        {...message}\n                        deleteMessage={props.deleteMessage}\n                        updateMessage={props.updateMessage}\n                    />\n                );\n            })}\n            <div className=\"new-message-container\">\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label htmlFor=\"chat-message\"></label>\n                    <input\n                        type=\"textarea\"\n                        id=\"chat-message\"\n                        placeholder=\"Enter Message...\"\n                        onChange={(e) => handleChange(e)}\n                        value={text}\n                        className='form-control enter-message-input'\n                    />\n                    <button type=\"submit\" className=\"btn btn-outline-success submit-message-btn\">Send</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n","import \"./Main.css\";\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\nimport ChatRoomList from \"./ChatRoomList/ChatRoomList\";\nimport MessageList from \"./MessageList/MessageList\";\nimport { useState, useEffect, useRef } from \"react\";\n\nexport default function Main() {\n    const [chatRooms, setChatRooms] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [currentChatRoom, setCurrentChatRoom] = useState(0);\n    const firstRender = useRef(true);\n\n    console.log(messages)\n\n\n    useEffect(() => {\n        grabChatRooms();\n        console.log(messages);\n    }, []);\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false;\n        } else {\n            grabMessages(currentChatRoom);\n        }\n    }, [currentChatRoom]);\n\n    async function grabChatRooms() {\n        await fetch(`/api/chatrooms/`)\n            .then((response) => response.json())\n            .then((data) => setChatRooms(data));\n    }\n\n    async function deleteMessage(id) {\n        await fetch(`/api/chatrooms/${currentChatRoom}/messages/${id}/`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        });\n        grabMessages();\n    }\n\n    async function deleteChatRoom(id) {\n        await fetch(`/api/chatrooms/${id}/`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n        });\n        grabChatRooms();\n    }\n\n    async function grabMessages() {\n        await fetch(`/api/chatrooms/${currentChatRoom}/messages/`)\n            .then((response) => response.json())\n            .then((data) => setMessages(data));\n    }\n\n    async function postChatRoom(name) {\n        let data = {\n            name: name,\n        };\n        const response = await fetch(`/api/chatrooms/`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        });\n        grabChatRooms();\n        return response.json();\n    }\n\n    async function postMessage(message) {\n        let data = {\n            room: currentChatRoom,\n            user: \"Username\",\n            body: message,\n        };\n        const response = await fetch(\n            `/api/chatrooms/${currentChatRoom}/messages/`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                },\n                body: JSON.stringify(data),\n            }\n            \n        );\n        grabMessages();\n        const responseData = await response.json()\n        console.log(responseData.username);\n    }\n\n    async function updateMessage(id, obj) {\n        const requestOptions = {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(obj),\n        };\n        const response = await fetch(\n            `/api/chatrooms/${currentChatRoom}/messages/${id}/`,\n            requestOptions\n        );\n        grabMessages();\n        return response.json();\n    }\n\n    function changeChatRoom(id) {\n        setCurrentChatRoom(id);\n    }\n\n    return (\n        <div className=\"main-container\">\n            <ChatRoomList\n                chatRooms={chatRooms}\n                changeChatRoom={changeChatRoom}\n                postChatRoom={postChatRoom}\n                deleteChatRoom={deleteChatRoom}\n            />\n            <MessageList\n                messages={messages}\n                grabMessages={grabMessages}\n                postMessage={postMessage}\n                deleteMessage={deleteMessage}\n                updateMessage={updateMessage}\n            />\n        </div>\n    );\n}\n","import \"./Footer.css\"\nimport React from 'react'\nimport { AiOutlineCopyrightCircle } from 'react-icons/ai'\n\nexport default function Footer() {\n    return (\n        <div className=\"footer-container\">\n            <p className=\"footer-copyright\"> Copyright <AiOutlineCopyrightCircle /> 2021 Diskord. All Rights Reserved</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport './Registration.css'\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport default function Registration(props) {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        email: \"\",\n        password1: \"\",\n        password2: \"\",\n    });\n\n    function handleChange(e) {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.id]: e.target.value,\n        }));\n        console.log(\"FORMDATA\", formData);\n    }\n    let passwordWarning;\n    if (formData.password1 !== formData.password2) {\n        passwordWarning = <p className=\"text-danger\">Passwords do not match</p>;\n    } else {\n        passwordWarning = \"\";\n    }\n\n    function handleSubmit(e) {\n        console.log(formData);\n        e.preventDefault();\n        if (\n            formData.password1 === formData.password2 &&\n            formData.password1 !== \"\"\n        ) {\n            props.handleRegistration(formData);\n        }\n    }\n\n    function handleBackBtn() {\n        props.changeStatus('splash');\n    }\n\n    return (\n        <div className=\"registration-form-container\">\n            <button className=\"registration-back-btn\" onClick={handleBackBtn}><BiArrowBack/></button>\n            <form className=\"registration-form\" onSubmit={(e) => handleSubmit(e)}>\n                <div className=\"form-group text-left mb-3 mt-1\">\n                    <label className=\"form-label\" htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={formData.username}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Username\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={formData.email}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Email\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"Password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password1\"\n                        value={formData.password1}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group mb-3 mt-3\">\n                    <label className=\"form-label\" htmlFor=\"password\">Re-enter Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password2\"\n                        value={formData.password2}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                    {passwordWarning}\n                </div>\n                <button type=\"submit\" className=\"btn btn-success mt-3 registration-submit-btn\">Register</button>\n            </form>\n        </div>\n    );\n}\n","import './Splash.css'\nimport React from \"react\";\n\nexport default function Splash(props) {\n    function handleClick(e) {\n        props.changeStatus(e.target.value);\n    }\n\n    return (\n        <div className='splash-container'>\n            <h1>Welcome to <span className=\"diskord-green\">Diskord</span> Chat Client</h1>\n            <p>Diskord is a place where you can belong to a programming cohort, a school club, a gaming group, or a worldwide art community. Where just you and a handful of friends can spend time together. A place that makes it easy to talk every day and hang out more often.</p>\n            <div className='splash-btn-group'>\n            <button className=\"btn btn-success\" value=\"register\" onClick={handleClick}>\n                Register\n            </button>\n            <button className=\"btn btn-success mt-2\" value=\"login\" onClick={handleClick}>\n                Login\n            </button>\n            </div>\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Login.css\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { useState } from \"react\";\n\nexport default function Login(props) {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    function handleChange(e) {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.id]: e.target.value,\n        }));\n        console.log(\"FORMDATA\", formData);\n    }\n\n    function handleSubmit(e) {\n        console.log(formData);\n        e.preventDefault();\n        props.handleLogin(formData);\n    }\n\n    function handleBackBtn() {\n        props.changeStatus('splash')\n    }\n\n    return (\n        <div className=\"login-container\">\n            <button className=\"login-back-btn\" onClick={handleBackBtn}>\n                <BiArrowBack />\n            </button>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group text-left mb-3\">\n                    <label className=\"form-label\" htmlFor=\"username\">\n                        Username:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={formData.username}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Username\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3 mt-2\">\n                    <label className=\"form-label\" htmlFor=\"Password\">\n                        Password:\n                    </label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={(e) => handleChange(e)}\n                        placeholder=\"Enter Password\"\n                        className=\"form-control\"\n                    />\n                </div>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-success submit-login-btn\"\n                >\n                    Login\n                </button>\n            </form>\n        </div>\n    );\n}\n","import Cookies, { set } from \"js-cookie\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Footer from \"./components/Footer/Footer\";\nimport Registration from \"./components/User/Registration/Registration\";\nimport Splash from \"./components/User/Splash\";\nimport Login from \"./components/User/Login/Login\";\nimport { useState } from \"react\";\n\nfunction App() {\n    const [userStatus, setUserStatus] = useState(\"splash\");\n\n    async function handleRegistration(userData) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(userData),\n        };\n        const response = await fetch(\"/rest-auth/registration/\", options);\n        try {\n            const data = await response.json();\n            console.log(data);\n            Cookies.set(`Authorization`, `Token ${data.key}`);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    async function handleLogin(userData) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(userData),\n        };\n        const response = await fetch(\"/rest-auth/login/\", options);\n        if (response.ok === true) {\n            const data = await response.json();\n            Cookies.set(`Authorization`, `Token ${data.key}`);\n            setUserStatus(\"approved\");\n        } else {\n            console.error(response.statusText);\n        }\n    }\n\n    function changeStatus(val) {\n        setUserStatus(val);\n    }\n\n    let body;\n    switch (userStatus) {\n        case \"splash\":\n            body = <Splash changeStatus={changeStatus} />;\n            break;\n        case \"register\":\n            body = <Registration handleRegistration={handleRegistration} changeStatus={changeStatus}/>;\n            break;\n        case \"login\":\n            body = <Login handleLogin={handleLogin} changeStatus={changeStatus} />;\n            break;\n        case \"approved\":\n            body = <Main />;\n            break;\n    }\n\n    \n\n    return (\n        <div className=\"App\">\n            <Header changeStatus={changeStatus}/>\n            {body}\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}